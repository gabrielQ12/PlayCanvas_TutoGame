class t{constructor(t=0,s=0){this.x=0,this.y=0,this.x=t,this.y=s}set(t,s){return this.x=t,this.y=s,this}copy(t){return this.x=t.x,this.y=t.y,this}clone(){return new t(this.x,this.y)}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}mult(t){return this.x*=t.x,this.y*=t.y,this}multScalar(t){return this.x*=t,this.y*=t,this}div(t){return this.x/=t.x,this.y/=t.y,this}divScalar(s){return 0===s?new t(0,0):(this.x/=s,this.y/=s,this)}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){return this.divScalar(this.length())}limit(t){return this.length()>t&&(this.normalize(),this.multScalar(t)),this}distanceTo(t){return Math.sqrt(this.distanceToSq(t))}distanceToSq(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}}class s{constructor(s){this.type="camera",this.position=new t,this.rotation=0,this.zoom=1}}class i{constructor(){this.element=document.createElement("canvas"),this.autoClear=!0}setSize(t,s){this.element.width=t,this.element.height=s,this.element.style.width=t+"px",this.element.style.height=s+"px"}clear(){const t=this.element.getContext("2d");t&&t.clearRect(0,0,this.element.width,this.element.height)}render(t,s){const i=this.element.getContext("2d");null!==i&&(this.autoClear&&this.clear(),i.save(),i.translate(s.position.x,s.position.y),i.rotate(s.rotation),i.scale(s.zoom,s.zoom),t.render(i),i.restore())}setSmoothing(t){const s=this.element.getContext("2d");s&&(s.imageSmoothingEnabled=t)}}class e{constructor(t={}){var s;this.type="Material",this.opacity=1,this.opacity=null!==(s=t.opacity)&&void 0!==s?s:this.opacity}render(t){t.globalAlpha=this.opacity}}class h{constructor(s={}){var i,e,h,a;this.id=r++,this.type="Object2D",this.parent=null,this.children=[],this.position=new t,this.rotation=0,this.scale=1,this.visible=!0,this.position=null!==(i=s.position)&&void 0!==i?i:this.position,this.rotation=null!==(e=s.rotation)&&void 0!==e?e:this.rotation,this.scale=null!==(h=s.scale)&&void 0!==h?h:this.scale,this.visible=null!==(a=s.visible)&&void 0!==a?a:this.visible}add(t){return null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),this}remove(t){const s=this.children.indexOf(t);return-1!==s&&(t.parent=null,this.children.splice(s,1)),this}}let r=0;class a{constructor(){this.type="Shape"}}class n{constructor(t){this.r=1,this.g=1,this.b=1,this.setHex(t)}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,s,i){return this.r=t,this.g=s,this.b=i,this}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}}class o extends e{constructor(t={}){var s;super(t),this.type="BasicMaterial",this.wireframe=!1,this.color=new n(0),this.wireframe=null!==(s=t.wireframe)&&void 0!==s?s:this.wireframe,this.color=t.color?new n(t.color):this.color}render(t){super.render(t),this.wireframe?(t.strokeStyle=this.color.getStyle(),t.stroke()):(t.fillStyle=this.color.getStyle(),t.fill())}}class l extends e{constructor(t={}){var s,i;super(t),this.type="ImageMaterial",this.clip=!0,this.image=new Image,this.clip=null!==(s=t.clip)&&void 0!==s?s:this.clip,this.image.src=null!==(i=t.src)&&void 0!==i?i:this.image.src}render(t){super.render(t),this.clip&&t.clip(),t.drawImage(this.image,-this.image.width/2,-this.image.height/2)}}class c extends l{constructor(t={}){var s,i,e,h,r,a;super(t),this.type="SpriteMaterial",this.frameStart=1,this.frameCount=1,this.frameRate=1,this.frameSize=[1,1],this.frameOffset=[0,0],this.loop=!0,this.frameStart=null!==(s=t.frameStart)&&void 0!==s?s:this.frameStart,this.frameCount=null!==(i=t.frameCount)&&void 0!==i?i:this.frameCount,this.frameRate=null!==(e=t.frameRate)&&void 0!==e?e:this.frameRate,this.frameSize=null!==(h=t.frameSize)&&void 0!==h?h:this.frameSize,this.frameOffset=null!==(r=t.frameOffset)&&void 0!==r?r:this.frameOffset,this.loop=null!==(a=t.loop)&&void 0!==a?a:this.loop}render(t){e.prototype.render.call(this,t),this.frameStart+=1/this.frameRate,this.frameStart%=this.frameCount;const s=this.frameOffset[0],i=this.frameOffset[1],h=this.frameSize[0],r=this.frameSize[1];t.drawImage(this.image,s+(0|this.frameStart)*h,i,h,r,-.5*h,-.5*r,h,r)}}const u=2*Math.PI;class d extends h{constructor(t,s,i){super(i),this.type="Mesh",this.children=[],this.shape=t,this.material=s}render(t){this.rotation%=u,this.visible&&(t.save(),t.scale(this.scale,this.scale),t.translate(this.position.x,this.position.y),t.rotate(this.rotation),this.shape.render(t),this.material.render(t),t.restore())}}class p extends h{constructor(){super(...arguments),this.type="Scene",this.children=[]}render(t,s){for(let i=0,e=(s=s||this.children).length;i<e;i++)s[i].render(t),this.render(t,s[i].children)}}class m extends a{constructor(t={}){var s,i;super(),this.type="BoxShape",this.width=1,this.height=1,this.width=null!==(s=t.width)&&void 0!==s?s:this.width,this.height=null!==(i=t.height)&&void 0!==i?i:this.height}render(t){t.beginPath(),t.rect(.5*-this.width,.5*-this.height,this.width,this.height),t.closePath()}}class f extends a{constructor(t={}){var s;super(),this.type="CircleShape",this.radius=1,this.radius=null!==(s=t.radius)&&void 0!==s?s:this.radius}render(t){t.beginPath(),t.arc(0,0,this.radius,0,u),t.closePath()}}class y extends a{constructor(t={}){var s,i;super(),this.type="PolygonShape",this._faces=3,this._radius=1,this._points=[],this.faces=null!==(s=t.faces)&&void 0!==s?s:this._faces,this.radius=null!==(i=t.radius)&&void 0!==i?i:this._radius}render(t){t.beginPath(),t.moveTo(this._points[0][0],this._points[0][1]);for(let s=1,i=this._points.length;s<i;s++)t.lineTo(this._points[s][0],this._points[s][1]);t.closePath()}update(){const s=u/this._faces;this._points=[];for(let i=0,e=this._faces;i<e;i++){const e=new t(Math.cos(i*s),Math.sin(i*s)).multScalar(this._radius);this._points.push([e.x,e.y])}}set faces(t){if(t<3)throw new Error("Polygon must have at least 3 faces");this._faces=t,this.update()}get faces(){return this._faces}set radius(t){if(t<0)throw new Error("Radius must be greater than 0");this._radius=t,this.update()}get radius(){return this._radius}}class g extends y{constructor(t={}){super({...t,faces:3}),this.type="TriangleShape"}set faces(t){if(3!==t)throw new Error("TriangleShape can only have 3 faces.");this._faces=t}}export{o as BasicMaterial,m as BoxShape,s as Camera,i as Canvas,f as CircleShape,n as Color,l as ImageMaterial,e as Material,d as Mesh,h as Object2D,y as PolygonShape,p as Scene,a as Shape,c as SpriteMaterial,g as TriangleShape,t as Vector2};
//# sourceMappingURL=canevas.mjs.map
